<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnPesquisa.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAAATRJREFUWEftk71KA0EURteoEETByp9G7FSwVvERNOQtTBFFEBuxUNQX8AmUBCwt
        LHy/nG9mP9iEQCxmEoQ5cNg7u7D37jc7VaFQ+I8s4XKt6rmippNMu5eFVn3dwy5e4o5ugJ9lw1E/4ABv
        8Q6/sI8i23Y44kd8jmVo5obv2Itl+u1wE8X+EcsQ90qtaOMQN8IqcRL+og4qcuHGwvULnsUy7f/gAS7w
        PpZTB3jDk1imHcBxbqNi9svV2M3X8RPXwirxFgincIP64Zro2Td6e1bra3L8VVeoo/eEr6hUrlFH8xhF
        8pNgHP8mnuMp+s8/wl88CKuMQ+jFzT1W7djVXEMchlXGIdRUaUgP42aTQyQ9EbPwEGr+g7thNZ5YdjzE
        Pm7Fcr4DiObWLAwNsPAhCoXCH6iqEQ/8Ftvb1f9qAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMLrAADC6wAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAA
        AAkAAAARAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEQAA
        AAkAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAA
        AAcAAACOAAAA6wAAAPQAAADzAAAA8wAAAPMAAADzAAAA8wAAAPMAAADzAAAA8wAAAPMAAADzAAAA8wAA
        APMAAAD0AAAA6wAAAI8AAAAHAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAQAAAAAAAAAjwAAAP8AAAD4AAAA8QAAAPIAAADyAAAA8gAAAPIAAADyAAAA8wAAAPMAAADyAAAA8gAA
        APIAAADyAAAA8gAAAPEAAAD4AAAA/wAAAI8AAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAAEAAAAAAAAAAgAAADjAAAA/wAAAEEAAAAHAAAAEgAAABAAAAAQAAAAEAAAABEAAAAPAAAADwAA
        ABEAAAAQAAAAEAAAABAAAAASAAAABwAAAEEAAAD/AAAA5AAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAgAAAAAAAAAFAAAAIAAAAPEAAADyAAAAEAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAEAAAAPIAAADyAAAAEAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAAAAAAHAAAAjgAAAOkAAADyAAAA/wAAAO4AAAATAAAAAAAAAAIAAAABAAAAAgAA
        AAEAAAAAAAAAwwAAAMMAAAAAAAAAAQAAAAIAAAABAAAAAgAAAAAAAAASAAAA8gAAAPMAAAAQAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAI8AAAD/AAAA+AAAAPEAAAD/AAAA7gAAABEAAAAAAAAAAQAA
        AAAAAAABAAAAAAAAABAAAADyAAAA8gAAABAAAAAAAAAAAQAAAAAAAAABAAAAAAAAABAAAADyAAAA8wAA
        ABAAAAAAAAAAAAAAAAAAAAABAAAABAAAAAAAAAAIAAAA4wAAAP8AAAA9AAAAFwAAAPUAAADyAAAAEAAA
        AAAAAAACAAAAAQAAAAIAAAAAAAAAEQAAAPAAAADwAAAAEQAAAAAAAAACAAAAAQAAAAIAAAAAAAAAEAAA
        APIAAADzAAAAEAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAABQAAACAAAADxAAAA8wAAAAwAAAAMAAAA8wAA
        APIAAAAQAAAAAAAAAAIAAAAAAAAAAQAAAAAAAAAQAAAA8gAAAPIAAAAQAAAAAAAAAAEAAAAAAAAAAgAA
        AAAAAAAQAAAA8gAAAPMAAAAQAAAAAAAAAAEAAAAAAAAABwAAAI4AAADqAAAA8gAAAP8AAADvAAAADwAA
        AA0AAADzAAAA8gAAABEAAAAAAAAABgAAABEAAAARAAAADAAAACAAAADzAAAA8wAAACAAAAAMAAAAEQAA
        ABEAAAAGAAAAAAAAABAAAADyAAAA8wAAABAAAAAAAAAAAwAAAAAAAACPAAAA/wAAAPgAAADxAAAA/wAA
        AO8AAAANAAAADAAAAPMAAADzAAAADwAAAAAAAADDAAAA+wAAAPAAAADyAAAA8wAAAP4AAAD+AAAA8wAA
        APIAAADwAAAA+wAAAMMAAAAAAAAADwAAAPMAAADzAAAAEAAAAAAAAAAAAAAACAAAAOQAAAD/AAAAPQAA
        ABcAAAD1AAAA8wAAAAwAAAAMAAAA8wAAAPMAAAAPAAAAAAAAAMMAAAD7AAAA8AAAAPIAAADzAAAA/gAA
        AP4AAADzAAAA8gAAAPAAAAD7AAAAwwAAAAAAAAAPAAAA8wAAAPMAAAAQAAAAAAAAAAAAAAAQAAAA8gAA
        APMAAAAMAAAADAAAAPMAAADzAAAADAAAAAwAAADzAAAA8gAAABEAAAAAAAAABgAAABEAAAARAAAADAAA
        ACAAAADzAAAA8wAAACAAAAAMAAAAEQAAABEAAAAGAAAAAAAAABAAAADyAAAA8wAAABAAAAAAAAAAAAAA
        ABAAAADzAAAA9AAAAA4AAAANAAAA8wAAAPMAAAAMAAAADAAAAPMAAADyAAAAEAAAAAAAAAACAAAAAAAA
        AAEAAAAAAAAAEAAAAPIAAADyAAAAEAAAAAAAAAABAAAAAAAAAAIAAAAAAAAAEAAAAPIAAADzAAAAEAAA
        AAAAAAAAAAAAEAAAAPMAAADzAAAADAAAAAwAAADzAAAA8wAAAAwAAAAMAAAA8wAAAPIAAAAQAAAAAAAA
        AAIAAAABAAAAAgAAAAAAAAARAAAA8AAAAPAAAAARAAAAAAAAAAIAAAABAAAAAgAAAAAAAAAQAAAA8gAA
        APMAAAAQAAAAAAAAAAAAAAAQAAAA8wAAAPMAAAAMAAAADAAAAPMAAADzAAAADAAAAAwAAADzAAAA8gAA
        ABAAAAAAAAAAAQAAAAAAAAABAAAAAAAAABAAAADyAAAA8gAAABAAAAAAAAAAAQAAAAAAAAABAAAAAAAA
        ABAAAADyAAAA8wAAABAAAAAAAAAAAAAAABAAAADzAAAA8wAAAAwAAAAMAAAA8wAAAPMAAAAMAAAADAAA
        APMAAADyAAAAEgAAAAAAAAACAAAAAQAAAAIAAAABAAAAAAAAAMMAAADDAAAAAAAAAAEAAAACAAAAAQAA
        AAIAAAAAAAAAEgAAAPIAAADzAAAAEAAAAAAAAAAAAAAAEAAAAPMAAADzAAAADAAAAAwAAADzAAAA8wAA
        AAwAAAAMAAAA8gAAAPIAAAAQAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAAAAAAQAAAA8gAAAPIAAAAQAAAAAAAAAAAAAAAQAAAA8wAAAPMAAAAMAAAADAAA
        APMAAADzAAAADgAAAAQAAADkAAAA/wAAAEEAAAAHAAAAEgAAABAAAAAQAAAAEAAAABEAAAAPAAAADwAA
        ABEAAAAQAAAAEAAAABEAAAATAAAABwAAAEEAAAD/AAAA5AAAAAgAAAAAAAAAAAAAABAAAADzAAAA8wAA
        AAwAAAAMAAAA8wAAAPIAAAATAAAAAAAAAJAAAAD/AAAA+AAAAPEAAADyAAAA8gAAAPIAAADyAAAA8gAA
        APIAAADyAAAA8gAAAPIAAADxAAAA7QAAAO4AAADxAAAA+AAAAP8AAACPAAAAAAAAAAMAAAAAAAAAEAAA
        APMAAADzAAAADAAAAAwAAADzAAAA8gAAABMAAAAAAAAACAAAAI8AAADrAAAA9AAAAPMAAADzAAAA8wAA
        APMAAADzAAAA8wAAAPMAAADzAAAA8wAAAPUAAAD/AAAA/gAAAPMAAADqAAAAjgAAAAcAAAAAAAAAAQAA
        AAAAAAAQAAAA8wAAAPMAAAAMAAAADAAAAPIAAADyAAAAEAAAAAAAAAABAAAAAAAAAAYAAAANAAAADAAA
        AAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAA0AAAAIAAAAFwAAAPAAAADxAAAAIQAAAAUAAAAAAAAAAgAA
        AAAAAAAAAAAAAAAAABAAAADzAAAA8wAAAA4AAAAEAAAA5AAAAP8AAABBAAAABwAAABMAAAATAAAADgAA
        AAsAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAANAAAADwAAAAMAAAA9AAAA/wAAAOMAAAAIAAAAAAAA
        AAQAAAABAAAAAAAAAAAAAAAAAAAAEAAAAPMAAADyAAAAEwAAAAAAAACQAAAA/wAAAPgAAADxAAAA8gAA
        APIAAADzAAAA8wAAAPMAAADzAAAA8wAAAPMAAADzAAAA8wAAAO8AAADvAAAA8gAAAPkAAAD/AAAAjwAA
        AAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAA8wAAAPIAAAATAAAAAAAAAAgAAACPAAAA6wAA
        APQAAADzAAAA8wAAAPMAAADzAAAA8wAAAPMAAADzAAAA8wAAAPMAAAD1AAAA/wAAAP4AAADzAAAA6gAA
        AI4AAAAHAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAADyAAAA8gAAABAAAAAAAAAAAQAA
        AAAAAAAGAAAADQAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAANAAAACAAAABcAAADwAAAA8QAA
        ACEAAAAFAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAOQAAAD/AAAAQQAA
        AAcAAAATAAAAFAAAAA4AAAALAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAA4AAAADAAAAPQAA
        AP8AAADjAAAACAAAAAAAAAAEAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAjwAA
        AP8AAAD4AAAA8QAAAPIAAADyAAAA8wAAAPMAAADzAAAA8wAAAPMAAADzAAAA8wAAAPMAAADzAAAA8wAA
        APMAAAD5AAAA/wAAAI8AAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAAAAAAHAAAAjgAAAOsAAAD0AAAA8wAAAPMAAADzAAAA8wAAAPMAAADzAAAA8wAAAPMAAADzAAAA8wAA
        APMAAADzAAAA9AAAAOsAAACPAAAABwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAIAAAAAAAAACQAAABEAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAA
        ABAAAAAQAAAAEAAAABAAAAARAAAACQAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/0X/ov6QAAn+QAAC+kAAAvSAAAHoBaWh5AQkIaQFQqFIBEIhgAVCoUAE
        ACFABAAhgAQAIYAEACGABUKhgARCIYAFQqGABCQhgAWloYAAAAGAQAACgEAAAoBQAAGAAAAShAAAJYQA
        ACeFAAAXgAABL0AAAl9AAAJ/kAAJf0X/ov8=
</value>
  </data>
</root>